{
    "Fold region": {
        "prefix": "region",
        "body": ["<!-- #region $1 -->", "$0", "<!-- endregion -->"]
    },
    "<code>": {
        "prefix": ["pre", "code"],
        "body": ["<pre><code class=\"javascript\">", "  $0", "</code></pre>"]
    },
    "Syntax Directed Operation": {
        "prefix": ["sdo", "clause sdo"],
        "body": [
            "<emu-clause id=\"sec-${1:parent-name}-static-semantics-${2:some-operation}\">",
            "  <h1>",
            "    Static Semantics: ${2/(.*)/${1:/pascalcase}/} (",
            "    ): ${3:a List of Strings}",
            "  </h1>",
            "  <dl class=\"header\">",
            "  </dl>",
            "  <emu-grammar>",
            "    ${4:LeftHandSide : Production}",
            "  </emu-grammar>",
            "  <emu-alg>",
            "    1. ${5:TODO}.",
            "  </emu-alg>",
            "</emu-clause>",
            ""
        ]
    },
    "Built-in Function": {
        "prefix": ["builtin", "clause builtin"],
        "body": [
            "<emu-clause id=\"sec-${1/(.*)/${1:/downcase}/}\">",
            "    <h1>${1:Something.prototype.function} ( )</h1>",
            "    <p>This function performs the following steps when called:</p>",
            "    <emu-alg>",
            "        1. ${0:TODO}.",
            "    </emu-alg>",
            "</emu-clause>",
            ""
        ],
        "description": "Create a new built-in function"
    },
    "Abstract Operation": {
        "prefix": ["ao", "clause ao", "clause abstract operation"],
        "body": [
            "<emu-clause id=\"sec-${1/(.*)/${1:some-abstract-operation}/}\" type=\"abstract operation\">",
            "    <h1>",
            "        ${1/(.*)/${1:/pascalcase}/} (",
            "            _${2:input}_: ${3:an ECMAScript language value},",
            "        ): ${4:either a normal completion containing an Object or a throw completion}",
            "    </h1>",
            "    <dl class=\"header\">",
            "    </dl>",
            "    <emu-alg>",
            "        1. ${0:TODO}.",
            "    </emu-alg>",
            "</emu-clause>"
        ],
        "description": "Create a new Abstract Operation"
    },
    "<emu-grammar>": {
        "prefix": ["emu-grammar", "grammar"],
        "body": ["<emu-grammar>", "  $0", "</emu-grammar>"]
    },
    "<emu-alg>": {
        "prefix": ["emu-alg", "alg"],
        "body": ["<emu-alg>", "  1. ${1:TODO}.", "</emu-alg>"]
    },
    "RS: Evaluation": {
        "prefix": ["rs", "rs evaluation", "clause evaluation"],
        "body": [
            "<emu-clause id=\"sec-${1}-runtime-semantics-evaluation\" type=\"sdo\">",
            "    <h1>Runtime Semantics: Evaluation</h1>",
            "    <emu-grammar>",
            "        ${2}",
            "    </emu-grammar>",
            "    <emu-alg>",
            "        1. ${3: TODO}.",
            "    </emu-alg>${0}",
            "</emu-clause>",
            ""
        ]
    },
    "SS: Early Error": {
        "prefix": [
            "ss ee",
            "ss early error",
            "static semantics: ee",
            "static semantics: early error",
            "ee",
            "early error",
            "clause early error"
        ],
        "body": [
            "<emu-clause id=\"sec-${1}-static-semantics-early-errors\">",
            "    <h1>Static Semantics: Early Errors</h1>",
            "    <emu-grammar>",
            "        ${2}",
            "    </emu-grammar>",
            "    <ul>",
            "        <li>It is a Syntax Error if ${3}.</li>",
            "    </ul>${0}",
            "</emu-clause>",
            ""
        ]
    },
    "class": {
        "prefix": "class",
        "body": [
            "<emu-clause id=\"sec-${1:some-class}-objects\">",
            "    <h1>${1/(.*)/${1:/pascalcase}/} Objects</h1>",
            "    <p>A ${1/(.*)/${1:/pascalcase}/} is an object that ${2:do something}.</p>",
            "",
            "    <emu-clause id=\"sec-${1}-constructor\">",
            "        <h1>The ${1/(.*)/${1:/pascalcase}/} Constructor</h1>",
            "        <p>The <dfn variants=\"${1/(.*)/${1:/pascalcase}/}s\">${1/(.*)/${1:/pascalcase}/}</dfn> constructor:</p>",
            "        <ul>",
            "            <li>is <dfn>%${1/(.*)/${1:/pascalcase}/}%</dfn>.</li>",
            "            <li>is the initial value of the *\"${1/(.*)/${1:/pascalcase}/}\"* property of the global object.</li>",
            "            <li>creates and initializes a new ${1/(.*)/${1:/pascalcase}/} when called as a constructor.</li>",
            "            <li>is not intended to be called as a function and will throw an exception when called in that manner.</li>",
            "            <li>",
            "                may be used as the value in an `extends` clause of a class definition. Subclass constructors that intend",
            "                to inherit the specified `${1/(.*)/${1:/pascalcase}/}` behaviour must include a `super` call to the",
            "                `${1/(.*)/${1:/pascalcase}/}` constructor to create and initialize the subclass instance with the",
            "                internal state necessary to support the `${1/(.*)/${1:/pascalcase}/}.prototype` built-in methods.",
            "            </li>",
            "        </ul>",
            "",
            "        <emu-clause id=\"sec-${1}-constructor-function\">",
            "            <h1>${1/(.*)/${1:/pascalcase}/} ( )</h1>",
            "            <p>This function performs the following steps when called:</p>",
            "            <emu-alg>",
            "                1. If NewTarget is *undefined*, throw a *TypeError* exception.",
            "                1. Let _object_ be ? OrdinaryCreateFromConstructor(NewTarget, *\"%${1/(.*)/${1:/pascalcase}/}.prototype%\"*, « [[${3:InternalSlot}]] »).",
            "                1. Return _object_.",
            "            </emu-alg>",
            "        </emu-clause>",
            "    </emu-clause>",
            "",
            "    <emu-clause id=\"sec-properties-of-the-${1}-constructor\">",
            "        <h1>Properties of the ${1/(.*)/${1:/pascalcase}/} Constructor</h1>",
            "        <p>The ${1/(.*)/${1:/pascalcase}/} constructor:</p>",
            "        <ul>",
            "            <li>has a [[Prototype]] internal slot whose value is %Function.prototype%.</li>",
            "            <li>has the following properties:</li>",
            "        </ul>",
            "",
            "        <emu-clause id=\"sec-${1}.prototype\">",
            "            <h1>${1/(.*)/${1:/pascalcase}/}.prototype</h1>",
            "            <p>",
            "                The initial value of `${1/(.*)/${1:/pascalcase}/}.prototype` is the ${1/(.*)/${1:/pascalcase}/} prototype",
            "                object.",
            "            </p>",
            "            <p>",
            "                This property has the attributes { [[Writable]]: *false*, [[Enumerable]]: *false*, [[Configurable]]:",
            "                *false* }.",
            "            </p>",
            "        </emu-clause>",
            "    </emu-clause>",
            "",
            "    <emu-clause id=\"sec-properties-of-the-${1}-prototype-object\">",
            "        <h1>Properties of the ${1/(.*)/${1:/pascalcase}/} Prototype Object</h1>",
            "        <p>The <dfn>${1/(.*)/${1:/pascalcase}/} prototype</dfn> object:</p>",
            "        <ul>",
            "            <li>is <dfn>%${1/(.*)/${1:/pascalcase}/}.prototype%</dfn>.</li>",
            "            <li>has a [[Prototype]] internal slot whose value is %Object.prototype%.</li>",
            "            <li>is an ordinary object.</li>",
            "            <li>does not have [[Cells]] and [[${2}]] internal slots.</li>",
            "        </ul>",
            "",
            "        <emu-clause id=\"sec-${1}.prototype.constructor\">",
            "            <h1>${1/(.*)/${1:/pascalcase}/}.prototype.constructor</h1>",
            "            <p>",
            "                The initial value of `${1/(.*)/${1:/pascalcase}/}.prototype.constructor` is %${1/(.*)/${1:/pascalcase}/}%.",
            "            </p>",
            "        </emu-clause>",
            "",
            "        <emu-clause id=\"sec-${1}.prototype.function\">",
            "            <h1>${1/(.*)/${1:/pascalcase}/}.prototype.function ( )</h1>",
            "            <p>This method performs the following steps when called:</p>",
            "            <emu-alg>",
            "                1. Let _object_ be the *this* value.",
            "                1. Perform ? RequireInternalSlot(_object_, [[$2]]).",
            "            </emu-alg>",
            "        </emu-clause>",
            "",
            "        <emu-clause id=\"sec-${1}.prototype-%symbol.tostringtag%\">",
            "            <h1>${1/(.*)/${1:/pascalcase}/}.prototype [ %Symbol.toStringTag% ]</h1>",
            "            <p>The initial value of the %Symbol.toStringTag% property is the String value *\"${1/(.*)/${1:/pascalcase}/}\"*.</p>",
            "            <p>",
            "                This property has the attributes { [[Writable]]: *false*, [[Enumerable]]: *false*, [[Configurable]]:",
            "                *true* }.",
            "            </p>",
            "        </emu-clause>",
            "    </emu-clause>",
            "",
            "    <emu-clause id=\"sec-properties-of-$1-instances\">",
            "        <h1>Properties of ${1/(.*)/${1:/pascalcase}/} Instances</h1>",
            "        <p>",
            "            ${1/(.*)/${1:/pascalcase}/} instances are ordinary objects that inherit properties from the",
            "            ${1/(.*)/${1:/pascalcase}/} prototype. ${1/(.*)/${1:/pascalcase}/} instances also have [[$3]]",
            "            internal slots.",
            "        </p>",
            "    </emu-clause>",
            "</emu-clause>",
            ""
        ]
    },
    "Define record": {
        "prefix": ["record", "emu-clause record"],
        "body": [
            "<emu-clause id=\"sec-${1/[\\\\ ]/-/g}\">",
            "    <h1>${1:Something Records}</h1>",
            "    <p>A <dfn variants=\"${1}s\">${1}</dfn> is a Record value used to ${2:do something}.</p>",
            "    <p>${1}s have the fields listed in <emu-xref href=\"#table-${1/[\\\\ ]/-/g}\"></emu-xref>.</p>",
            "    <emu-table id=\"table-${1/[\\\\ ]/-/g}\" caption=\"${1} Fields\">",
            "        <table>",
            "            <thead>",
            "                <tr>",
            "                    <th>${3:Field Name}</th>",
            "                    <th>${4:Value}</th>",
            "                    <th>${5:Meaning}</th>",
            "                </tr>",
            "            </thead>",
            "            <tbody>",
            "                <tr>",
            "                    <td>[[${6:FieldName}]]</td>",
            "                    <td>${7:an ECMAScript language value}</td>",
            "                    <td>${8:}</td>",
            "                </tr>",
            "                ${0:}",
            "            </tbody>",
            "        </table>",
            "    </emu-table>",
            "</emu-clause>",
            ""
        ],
        "description": "Create a new Table"
    },
    "Add record field": {
        "prefix": ["tr", "field"],
        "body": [
            "<tr>",
            "    <td>[[${1:Field}]]</td>",
            "    <td>${2:an ECMAScript language value}</td>",
            "    <td>${3}</td>",
            "</tr>"
        ],
        "description": "Add a new row."
    },
    "It is a Syntax Error if ": {
        "prefix": "It is a Syntax Error if ",
        "body": "It is a Syntax Error if "
    },
    "Editor Note": {
        "prefix": ["note", "editor note", "emu-note"],
        "body": ["<emu-note type=\"editor\">", "  <p>${1:Note text}</p>", "</emu-note>"]
    },
    "Clause": {
        "prefix": "clause",
        "body": [
            "<emu-clause id=\"sec-\">",
            "    <h1>${1:Clause Name}</h1>",
            "    <p>${2:Something}</p>",
            "</emu-clause>",
            ""
        ]
    },
    "Reference": {
        "prefix": ["xref", "ref", "emu-xref"],
        "body": ["<emu-xref href=\"#sec-$1\" title></emu-xref>"]
    }
}
